{"version":3,"file":"static/webpack/static\\development\\pages\\sell.js.fd8e3b6cad7b796a2209.hot-update.js","sources":["webpack:///./components/CreateItem.js","webpack:///./components/ErrorMessage.js"],"sourcesContent":["import React , {Component} from \"react\";\r\nimport {Mutation} from \"react-apollo\";\r\nimport Form from \"./styles/Form\";\r\nimport gql from \"graphql-tag\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport Error from \"./ErrorMessage\";\r\n\r\n\r\nconst CREATE_ITEM_MUTATION = gql`\r\n    mutation CREATE_ITEM_MUTATION (\r\n            $title: String!\r\n            $description: String!\r\n            $price: Int!\r\n            $image: String\r\n            $largeImage: String\r\n    ) {\r\n        createItem (\r\n            title : $title\r\n            description: $description\r\n            price: $pice\r\n            image: $image\r\n            largeImage: $largeImage\r\n        ){\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nclass CreateItem extends Component{\r\n    state={\r\n        title:\"Cool Shoes\",\r\n        description:\"I Love Those Context\",\r\n        image: \"shoes.jpg\",\r\n        largeImage: \"large-shoes.jpg\",\r\n        price: 100,\r\n    }\r\n    handleChange = e =>{\r\n        const {name , type , value} = e.target;\r\n        const val = type === 'number' ? parseFloat(value) : \r\n        value;\r\n        this.setState({ [name]:val });\r\n    }\r\n    render(){\r\n        return(\r\n            <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\r\n              {(createItem , {loading, error})=>(\r\n                 <Form \r\n                 onSubmit={(e)=>{\r\n                     e.preventDefault();\r\n                     console.log(this.state)\r\n                 }}>\r\n                 <Error error={error}/>\r\n                     <fieldset>\r\n                         <label htmlFor=\"title\">\r\n                         Title\r\n                          <input \r\n                          type=\"text\"\r\n                           id=\"title\"\r\n                            name=\"title\"\r\n                            placeholder=\"title\"\r\n                            required\r\n                            value={this.state.title}\r\n                            onChange={this.handleChange}\r\n                          />  \r\n                         </label>\r\n     \r\n                         <label htmlFor=\"price\">\r\n                         Price\r\n                          <input \r\n                          type=\"number\"\r\n                           id=\"price\"\r\n                            name=\"price\"\r\n                            placeholder=\"Price\"\r\n                            required\r\n                            value={this.state.price}\r\n                            onChange={this.handleChange}\r\n                          />  \r\n                         </label>\r\n     \r\n                         <label htmlFor=\"description\">\r\n                         Description\r\n                          <textarea \r\n                           id=\"description\"\r\n                            name=\"description\"\r\n                            placeholder=\"Enter A Description\"\r\n                            required\r\n                            value={this.state.description}\r\n                            onChange={this.handleChange}\r\n                          />  \r\n                         </label>\r\n                         <button type=\"submit\">Submit</button>\r\n     \r\n                         \r\n                     </fieldset>\r\n     \r\n                 </Form>\r\n              )}\r\n             </Mutation>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateItem;\r\nexport {CREATE_ITEM_MUTATION};","import styled from 'styled-components';\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: white;\n  margin: 2rem 0;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-left: 5px solid red;\n  p {\n    margin: 0;\n    font-weight: 100;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`;\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null;\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Shoot!</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ));\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Shoot!</strong>\n        {error.message.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  );\n};\n\nDisplayError.defaultProps = {\n  error: {},\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default DisplayError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAoBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7CA;AAuDA;;;;AAxEA;AACA;AA0EA;;;;;;;;;;;;;;;;;;;;ACxGA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;A","sourceRoot":""}